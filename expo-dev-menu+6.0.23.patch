diff --git a/node_modules/expo-dev-menu/.DS_Store b/node_modules/expo-dev-menu/.DS_Store
new file mode 100644
index 0000000..9f9098f
Binary files /dev/null and b/node_modules/expo-dev-menu/.DS_Store differ
diff --git a/node_modules/expo-dev-menu/ios/DevMenuAppInstance.swift b/node_modules/expo-dev-menu/ios/DevMenuAppInstance.swift
index ae42ca7..e94b38d 100644
--- a/node_modules/expo-dev-menu/ios/DevMenuAppInstance.swift
+++ b/node_modules/expo-dev-menu/ios/DevMenuAppInstance.swift
@@ -24,18 +24,18 @@ class DevMenuAppInstance: DevMenuRCTAppDelegate {
 
     super.init()
     super.initRootViewFactory()
-    self.rootViewFactory.bridge = bridge
+    self.rootViewFactory().bridge = bridge
   }
 
   /**
    Sends an event to JS triggering the animation that collapses the dev menu.
    */
   func sendCloseEvent() {
-    self.rootViewFactory.bridge?.enqueueJSCall("RCTDeviceEventEmitter.emit", args: [DevMenuAppInstance.CloseEventName])
+    self.rootViewFactory().bridge?.enqueueJSCall("RCTDeviceEventEmitter.emit", args: [DevMenuAppInstance.CloseEventName])
   }
 
   func sendOpenEvent() {
-    self.rootViewFactory.bridge?.enqueueJSCall("RCTDeviceEventEmitter.emit", args: [DevMenuAppInstance.OpenEventName])
+    self.rootViewFactory().bridge?.enqueueJSCall("RCTDeviceEventEmitter.emit", args: [DevMenuAppInstance.OpenEventName])
   }
 
   // MARK: RCTAppDelegate
diff --git a/node_modules/expo-dev-menu/ios/DevMenuViewController.swift b/node_modules/expo-dev-menu/ios/DevMenuViewController.swift
index 9fdc3ca..921e462 100644
--- a/node_modules/expo-dev-menu/ios/DevMenuViewController.swift
+++ b/node_modules/expo-dev-menu/ios/DevMenuViewController.swift
@@ -81,7 +81,7 @@ class DevMenuViewController: UIViewController {
   }
 
   private func rebuildRootView() {
-    reactRootView = manager.appInstance.rootViewFactory.view(withModuleName: "main", initialProperties: initialProps())
+    reactRootView = manager.appInstance.rootViewFactory().view(withModuleName: "main", initialProperties: initialProps())
     reactRootView?.frame = view.bounds
     reactRootView?.backgroundColor = UIColor { (traitCollection: UITraitCollection) -> UIColor in
       if traitCollection.userInterfaceStyle == .dark {
